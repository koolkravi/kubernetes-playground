# Installing Kuberetes cluster usig Kind
Kind is a tool for running local Kubernetes clusters using Docker container “nodes”

# OS

```
	vagrant@ubuntuvm01:~$ lsb_release -dirc
	Distributor ID: Ubuntu
	Description:    Ubuntu 18.04.3 LTS
	Release:        18.04
	Codename:       bionic
```

# Prerequisite

## 2. Install docker

```
sudo apt-get update
sudo apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

sudo apt-get update
sudo apt-get -y install docker-ce docker-ce-cli containerd.io
sudo docker run hello-world
sudo systemctl enable docker
systemctl start docker
```

### ps for more description see install-docker.md
- docker --version // Docker version 19.03.8, build afacb8b7f0

## 2. Install GO

```
wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz
tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz
export PATH=$PATH:/usr/local/go/bin
```

### note
- go version //go version go1.14.2 linux/amd64

## 3. Install kubectl (optional)

```
sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubectl
```

### note
vagrant@ubuntuvm01:~$ sudo kubectl version --short
Client Version: v1.18.1
Server Version: v1.17.0


# Setup kind Steps

## Step 1
```
GO111MODULE="on" go get sigs.k8s.io/kind@v0.7.0 
```
- Note 

###note
ls  //go
rm -f go1.14.2.linux-amd64.tar.gz

## Step 2
 ``` 
 export PATH=$PATH:/go/bin
 or
 $(go env GOPATH)/bin
 ```
 
###note
- which kind // usr/local/go/bin/go
- kind version //kind v0.7.0 go1.14.2 linux/amd64
- kind help 

## Step 3

### note
- vagrant@ubuntuvm01:~$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

```
kind create cluster 
```

- output : 

vagrant@ubuntuvm01:~$ sudo kind create cluster
Creating cluster "kind" ...
 Ensuring node image (kindest/node:v1.17.0) ??
  Ensuring node image (kindest/node:v1.17.0) ??
  Preparing nodes ??
  Writing configuration ??
  Starting control-plane ???
  Installing CNI ??
  Installing StorageClass ??
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

## Step 4 

### verify 

```
vagrant@ubuntuvm01:~$ which kind
/home/vagrant/go/bin/kind
```

```
vagrant@ubuntuvm01:~$ ls .kube
cache  config  http-cache
```


```
vagrant@ubuntuvm01:~$ sudo kind get clusters
kind
```

```
vagrant@ubuntuvm01:~$ sudo kubectl cluster-info
Kubernetes master is running at https://127.0.0.1:32768
KubeDNS is running at https://127.0.0.1:32768/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
```

```
vagrant@ubuntuvm01:~$ sudo docker ps
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                       NAMES
8b4dbfe07eac        kindest/node:v1.17.0   "/usr/local/bin/entr…"   19 minutes ago      Up 18 minutes       127.0.0.1:32768->6443/tcp   kind-control-plane
```

```
vagrant@ubuntuvm01:~$ sudo vi .kube/config
```

```
vagrant@ubuntuvm01:~$ sudo kubectl get nodes
NAME                 STATUS   ROLES    AGE   VERSION
kind-control-plane   Ready    master   23m   v1.17.0
```

```
vagrant@ubuntuvm01:~$ sudo kubectl get nodes -o wide
NAME                 STATUS   ROLES    AGE   VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE       KERNEL-VERSION      CONTAINER-RUNTIME
kind-control-plane   Ready    master   23m   v1.17.0   172.17.0.2    <none>        Ubuntu 19.10   4.15.0-58-generic   containerd://1.3.2
```

```
vagrant@ubuntuvm01:~$ sudo kubectl version --short
Client Version: v1.18.1
Server Version: v1.17.0
```

```
vagrant@ubuntuvm01:~$ sudo kubectl -n kube-system get all
NAME                                             READY   STATUS    RESTARTS   AGE
pod/coredns-6955765f44-9b8v7                     1/1     Running   0          24m
pod/coredns-6955765f44-gbppm                     1/1     Running   0          24m
pod/etcd-kind-control-plane                      1/1     Running   1          25m
pod/kindnet-6gsr5                                1/1     Running   0          24m
pod/kube-apiserver-kind-control-plane            1/1     Running   0          25m
pod/kube-controller-manager-kind-control-plane   1/1     Running   0          25m
pod/kube-proxy-6t279                             1/1     Running   0          24m
pod/kube-scheduler-kind-control-plane            1/1     Running   0          25m

NAME               TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE
service/kube-dns   ClusterIP   10.96.0.10   <none>        53/UDP,53/TCP,9153/TCP   25m

NAME                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR                 AGE
daemonset.apps/kindnet      1         1         1       1            1           <none>                        24m
daemonset.apps/kube-proxy   1         1         1       1            1           beta.kubernetes.io/os=linux   25m

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/coredns   2/2     2            2           25m

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/coredns-6955765f44   2         2         2       24m

```

## Step 5 :setup multi node cluster wuth additional worker node

```
 kind delete cluster 
```

```
vagrant@ubuntuvm01:~$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

```

### create a file 
```
kind-config.yaml

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
```

### verify 

```
vagrant@ubuntuvm01:~$ sudo kind create cluster --config kind-config.yaml
Creating cluster "kind" ...
  Ensuring node image (kindest/node:v1.17.0) ??
  Preparing nodes ?? ?? ??
  Preparing nodes ?? ?? ??
  Writing configuration ??
  Starting control-plane ???
  Installing CNI ??
  Installing StorageClass ??
  Joining worker nodes ??
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Have a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community ??
```

```
vagrant@ubuntuvm01:~$ sudo kubectl get nodes -o wide
NAME                 STATUS     ROLES    AGE     VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE       KERNEL-VERSION      CONTAINER-RUNTIME
kind-control-plane   Ready      master   2m20s   v1.17.0   172.17.0.4    <none>        Ubuntu 19.10   4.15.0-58-generic   containerd://1.3.2
kind-worker          NotReady   <none>   97s     v1.17.0   172.17.0.3    <none>        Ubuntu 19.10   4.15.0-58-generic   containerd://1.3.2
kind-worker2         NotReady   <none>   98s     v1.17.0   172.17.0.2    <none>        Ubuntu 19.10   4.15.0-58-generic   containerd://1.3.2
```

```
vagrant@ubuntuvm01:~$ sudo kubectl get sc
NAME                 PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
standard (default)   rancher.io/local-path   Delete          WaitForFirstConsumer   false                  2m30s
```

```
vagrant@ubuntuvm01:~$ sudo docker ps
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                       NAMES
fa7842a8e2f2        kindest/node:v1.17.0   "/usr/local/bin/entr…"   7 minutes ago       Up 5 minutes                                    kind-worker
408eb5695fa8        kindest/node:v1.17.0   "/usr/local/bin/entr…"   7 minutes ago       Up 5 minutes                                    kind-worker2
ccd68f4d092c        kindest/node:v1.17.0   "/usr/local/bin/entr…"   7 minutes ago       Up 5 minutes        127.0.0.1:32769->6443/tcp   kind-control-plane


```

## Step 6 :setup multi node cluster wuth additional master (HA cluster)

```
sudo kind delete cluster
```

```
vagrant@ubuntuvm01:~$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
```

### create a file with 2 master and 2 worker   (4 node)
```
kind-config.yaml

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: control-plane
- role: worker
- role: worker
```

### run and verify : we have one extra node 

```
sudo kubectl get nodes
```

### note we have one HA Proxy LoadBalancer 
```
sudo docker ps
```

##in kube config we have HA Proxy LB Entry 
```
vi .kube/config
```

```
sudo kubectl -n kubesystem get all 
```

## Step 7 :Deploy sample application nginx

```
sudo kubectl run nginx --image --replicas 2

```

Ref:
1.https://www.youtube.com/watch?v=4p4DqdTDqkk&list=PL34sAs7_26wNBRWM6BDhnonoA5FMERax0&index=61
2.https://kind.sigs.k8s.io/docs/user/quick-start/
3. https://kind.sigs.k8s.io/docs/user/quick-start/
4. setup kind
	https://github.com/kubernetes-sigs/kind
4.installkubectl
	https://kubernetes.io/docs/tasks/tools/install-kubectl/
	