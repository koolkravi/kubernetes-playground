vagrant@k-master:~$ helm status jenkins

output:

LAST DEPLOYED: Wed Jun 24 23:17:34 2020
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==> v1/ConfigMap
NAME                          DATA  AGE
jenkins                       2     3m49s
jenkins-jenkins-jcasc-config  1     3m49s
jenkins-tests                 1     3m49s

==> v1/Deployment
NAME     READY  UP-TO-DATE  AVAILABLE  AGE
jenkins  1/1    1           1          3m49s

==> v1/Pod(related)
NAME                      READY  STATUS   RESTARTS  AGE
jenkins-5f99cdcddc-87v6k  2/2    Running  0         3m49s

==> v1/Role
NAME                     CREATED AT
jenkins-casc-reload      2020-06-24T23:17:34Z
jenkins-schedule-agents  2020-06-24T23:17:34Z

==> v1/RoleBinding
NAME                      ROLE                          AGE
jenkins-schedule-agents   Role/jenkins-schedule-agents  3m49s
jenkins-watch-configmaps  Role/jenkins-casc-reload      3m49s

==> v1/Secret
NAME     TYPE    DATA  AGE
jenkins  Opaque  2     3m49s

==> v1/Service
NAME           TYPE       CLUSTER-IP     EXTERNAL-IP  PORT(S)         AGE
jenkins        NodePort   10.98.191.214  <none>       8080:32323/TCP  3m49s
jenkins-agent  ClusterIP  10.98.210.25   <none>       50000/TCP       3m49s

==> v1/ServiceAccount
NAME     SECRETS  AGE
jenkins  1        3m49s


NOTES:
1. Get your 'admin' user password by running:
  printf $(kubectl get secret --namespace default jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo
2. Get the Jenkins URL to visit by running these commands in the same shell:
  export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services jenkins)
  export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT/login

3. Login with the password from step 1 and the username: admin

4. Use Jenkins Configuration as Code by specifying configScripts in your values.yaml file, see documentation: http:///configuration-as-code and examples: https://github.com/jenkinsci/configuration-as-code-plugin/tree/master/demos

For more information on running Jenkins on Kubernetes, visit:
https://cloud.google.com/solutions/jenkins-on-container-engine
For more information about Jenkins Configuration as Code, visit:
https://jenkins.io/projects/jcasc/