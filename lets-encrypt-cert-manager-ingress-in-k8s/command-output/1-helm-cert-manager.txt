vagrant@k-master:~$ kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.2/cert-manager.crds.yaml
customresourcedefinition.apiextensions.k8s.io/certificaterequests.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/certificates.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/challenges.acme.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/clusterissuers.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/issuers.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/orders.acme.cert-manager.io created


vagrant@k-master:~$ helm status cert-manager
LAST DEPLOYED: Sat Jul 11 07:03:49 2020
NAMESPACE: cert-manager
STATUS: DEPLOYED

RESOURCES:
==> v1/ClusterRole
NAME               CREATED AT
cert-manager-edit  2020-07-11T07:03:50Z
cert-manager-view  2020-07-11T07:03:50Z

==> v1/Deployment
NAME                     READY  UP-TO-DATE  AVAILABLE  AGE
cert-manager             1/1    1           1          105s
cert-manager-cainjector  1/1    1           1          105s
cert-manager-webhook     1/1    1           1          105s

==> v1/Pod(related)
NAME                                      READY  STATUS   RESTARTS  AGE
cert-manager-58c8d4ff5b-6fqx8             1/1    Running  0         104s
cert-manager-cainjector-74659dbddf-6xppw  1/1    Running  0         104s
cert-manager-webhook-56648bc48-fbckd      1/1    Running  0         104s

==> v1/Service
NAME                  TYPE       CLUSTER-IP     EXTERNAL-IP  PORT(S)   AGE
cert-manager          ClusterIP  10.101.144.95  <none>       9402/TCP  105s
cert-manager-webhook  ClusterIP  10.108.85.62   <none>       443/TCP   105s

==> v1/ServiceAccount
NAME                     SECRETS  AGE
cert-manager             1        105s
cert-manager-cainjector  1        105s
cert-manager-webhook     1        105s

==> v1beta1/ClusterRole
NAME                                    CREATED AT
cert-manager-cainjector                 2020-07-11T07:03:50Z
cert-manager-controller-certificates    2020-07-11T07:03:50Z
cert-manager-controller-challenges      2020-07-11T07:03:50Z
cert-manager-controller-clusterissuers  2020-07-11T07:03:50Z
cert-manager-controller-ingress-shim    2020-07-11T07:03:50Z
cert-manager-controller-issuers         2020-07-11T07:03:50Z
cert-manager-controller-orders          2020-07-11T07:03:50Z

==> v1beta1/ClusterRoleBinding
NAME                                    ROLE                                                AGE
cert-manager-cainjector                 ClusterRole/cert-manager-cainjector                 105s
cert-manager-controller-certificates    ClusterRole/cert-manager-controller-certificates    105s
cert-manager-controller-challenges      ClusterRole/cert-manager-controller-challenges      105s
cert-manager-controller-clusterissuers  ClusterRole/cert-manager-controller-clusterissuers  105s
cert-manager-controller-ingress-shim    ClusterRole/cert-manager-controller-ingress-shim    105s
cert-manager-controller-issuers         ClusterRole/cert-manager-controller-issuers         105s
cert-manager-controller-orders          ClusterRole/cert-manager-controller-orders          105s

==> v1beta1/MutatingWebhookConfiguration
NAME                  WEBHOOKS  AGE
cert-manager-webhook  1         104s

==> v1beta1/Role
NAME                                    CREATED AT
cert-manager-cainjector:leaderelection  2020-07-11T07:03:50Z
cert-manager-webhook:dynamic-serving    2020-07-11T07:03:50Z
cert-manager:leaderelection             2020-07-11T07:03:50Z

==> v1beta1/RoleBinding
NAME                                    ROLE                                         AGE
cert-manager-cainjector:leaderelection  Role/cert-manager-cainjector:leaderelection  105s
cert-manager-webhook:dynamic-serving    Role/cert-manager-webhook:dynamic-serving    105s
cert-manager:leaderelection             Role/cert-manager:leaderelection             105s

==> v1beta1/ValidatingWebhookConfiguration
NAME                  WEBHOOKS  AGE
cert-manager-webhook  1         104s


NOTES:
cert-manager has been deployed successfully!

In order to begin issuing certificates, you will need to set up a ClusterIssuer
or Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).

More information on the different types of issuers and how to configure them
can be found in our documentation:

https://cert-manager.io/docs/configuration/

For information on how to configure cert-manager to automatically provision
Certificates for Ingress resources, take a look at the `ingress-shim`
documentation:

https://cert-manager.io/docs/usage/ingress/









